연결요소의 개수를 확인하는 문제였다. 단, 유방향그래프라는 점이 기존에 풀었던 문제와 달랐다. 그것 외에는 딱히 문제될 건 없었다.

## 코드

```
#include <bits/stdc++.h>
using namespace std;

const int MAX  = 1001;
int visited[MAX];

vector<int> grp[MAX];

vector<int> ans;

void dfs(int t);

int t, n;

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    
    cin >> t;
    ans.resize(t);
    
    for (int i=0; i<t; i++)
    {
        cin >> n;
        for (int j=1; j<=n; j++)
        {
            int a; cin >> a;
            grp[j].push_back(a);
        }
        
        int res = 0;
        for (int j=1; j<=n; j++)
        {
            if (!visited[j])
            {
                res++;
                dfs(j);
            }
        }
        ans[i] = res;
        
        for (int j=1; j<=n; j++) grp[j] = {};
        memset(visited, 0, MAX * sizeof(int));
    }
    
    for (int i=0; i<t; i++) cout << ans[i] << '\n';
    
    return 0;
}

void dfs(int t)
{
    visited[t] = 1;
    for (int i : grp[t])
    {
        if (!visited[i]) dfs(i);
    }
}
```
